////
/// @group Forms
////

@mixin clay-form-control-focus() {
	background-color: $input-focus-bg;
	border-color: $input-focus-border-color;
	box-shadow: $input-focus-box-shadow;
	color: $input-focus-color;
	outline: 0;
}

/// A mixin to create Form Control variants. You can base your variant off Bootstrap's `.form-control` class or create your own base class (e.g., `<input class="form-control my-custom-form-control" type="text" />` or `<input class="my-custom-form-control" type="text" />`).
/// @param {Map} $map - A map of `key: value` pairs. The keys and value types are listed below:
/// @example
/// enabled: {Bool}, // Set to false to prevent mixin styles from being output. Default: true
/// align-items: {String | Null},
/// bg: {Color | String | Null},
/// bg-clip: {String | Null},
/// bg-image: {String | List | Null},
/// bg-position: {String | List | Null},
/// bg-repeat: {String | List | Null},
/// bg-size: {Number | String | List | Null},
/// border-color: {Color | String | List | Null},
/// border-radius: {Number | String | List | Null},
/// border-style: {String | List | Null},
/// border-width: {Number | String | List | Null},
/// box-shadow: {String | List | Null},
/// color: {Color | String | Null},
/// cursor: {String | Null},
/// display: {String | Null},
/// flex-wrap: {String | Null},
/// font-size: {Number | String | Null},
/// font-weight: {Number | String | Null},
/// height: {Number | String | Null},
/// justify-content: {String | Null},
/// line-height: {Number | String | Null},
/// max-width: {Number | String | Null},
/// min-height: {Number | String | Null},
/// min-width: {Number | String | Null},
/// outline: {Number | String | Null},
/// padding-bottom: {Number | String | Null},
/// padding-left: {Number | String | Null},
/// padding-right: {Number | String | Null},
/// padding-top: {Number | String | Null},
/// text-align: {String | Null},
/// text-transform: {String | Null},
/// transition: {String | List | Null},
/// width: {Number | String | Null},
/// placeholder-color: {Color | String | Null},
/// placeholder-opacity: {Number | String | Null},
/// hover-bg: {Color | String | Null},
/// hover-border-color: {Color | String | List | Null},
/// hover-box-shadow: {String | List | Null},
/// hover-color: {Color | String | Null},
/// hover-placeholder-color: {Color | String | Null},
/// focus-bg: {Color | String | Null},
/// focus-bg-image: {String | List | Null},
/// focus-border-color: {Color | String | List | Null},
/// focus-box-shadow: {String | List | Null},
/// focus-color: {Color | String | Null},
/// focus-placeholder-color: {Color | String | Null},
/// readonly-bg: {Color | String | Null},
/// readonly-bg-image: {String | List | Null},
/// readonly-border-color: {Color | String | List | Null},
/// readonly-box-shadow: {String | List | Null},
/// readonly-color: {Color | String | Null},
/// readonly-cursor: {String | Null},
/// readonly-opacity: {Number | String | Null},
/// readonly-placeholder-color: {Color | String | Null},
/// disabled-bg: {Color | String | Null},
/// disabled-bg-image: {String | List | Null},
/// disabled-border-color: {Color | String | List | Null},
/// disabled-box-shadow: {String | List | Null},
/// disabled-color: {Color | String | Null},
/// disabled-cursor: {String | Null},
/// disabled-opacity: {Number | String | Null},
/// disabled-placeholder-color: {Color | String | Null},
/// @todo
/// - Add @example
/// - Add @link to documentation

@mixin clay-form-control-variant($map) {
	$enabled: setter(map-get($map, enabled), true);

	$align-items: map-get($map, align-items);
	$bg: map-get($map, bg);
	$bg-clip: map-get($map, bg-clip);
	$bg-image: map-get($map, bg-image);
	$bg-position: map-get($map, bg-position);
	$bg-repeat: map-get($map, bg-repeat);
	$bg-size: map-get($map, bg-size);
	$border-color: map-get($map, border-color);
	$border-radius: map-get($map, border-radius);
	$border-style: map-get($map, border-style);
	$border-width: map-get($map, border-width);
	$box-shadow: map-get($map, box-shadow);
	$color: map-get($map, color);
	$cursor: map-get($map, cursor);
	$display: map-get($map, display);
	$flex-wrap: map-get($map, flex-wrap);
	$font-size: map-get($map, font-size);
	$font-weight: map-get($map, font-weight);
	$height: map-get($map, height);
	$justify-content: map-get($map, justify-content);
	$line-height: map-get($map, line-height);
	$max-width: map-get($map, max-width);
	$min-height: map-get($map, min-height);
	$min-width: map-get($map, min-width);
	$outline: map-get($map, outline);
	$padding-bottom: map-get($map, padding-bottom);
	$padding-left: map-get($map, padding-left);
	$padding-right: map-get($map, padding-right);
	$padding-top: map-get($map, padding-top);
	$text-align: map-get($map, text-align);
	$text-transform: map-get($map, text-transform);
	$transition: map-get($map, transition);
	$width: map-get($map, width);
	$placeholder-color: map-get($map, placeholder-color);
	$placeholder-opacity: map-get($map, placeholder-opacity);
	$selection-bg: map-get($map, selection-bg);
	$selection-color: map-get($map, selection-color);

	$hover-bg: map-get($map, hover-bg);
	$hover-border-color: map-get($map, hover-border-color);
	$hover-box-shadow: map-get($map, hover-box-shadow);
	$hover-color: map-get($map, hover-color);
	$hover-placeholder-color: map-get($map, hover-placeholder-color);

	$focus-bg: map-get($map, focus-bg);
	$focus-bg-image: map-get($map, focus-bg-image);
	$focus-border-color: map-get($map, focus-border-color);
	$focus-box-shadow: map-get($map, focus-box-shadow);
	$focus-color: map-get($map, focus-color);
	$focus-placeholder-color: map-get($map, focus-placeholder-color);

	$readonly-bg: map-get($map, readonly-bg);
	$readonly-bg-image: map-get($map, readonly-bg-image);
	$readonly-border-color: map-get($map, readonly-border-color);
	$readonly-box-shadow: map-get($map, readonly-box-shadow);
	$readonly-color: map-get($map, readonly-color);
	$readonly-cursor: map-get($map, readonly-cursor);
	$readonly-opacity: map-get($map, readonly-opacity);
	$readonly-placeholder-color: map-get($map, readonly-placeholder-color);

	$disabled-bg: map-get($map, disabled-bg);
	$disabled-bg-image: map-get($map, disabled-bg-image);
	$disabled-border-color: map-get($map, disabled-border-color);
	$disabled-box-shadow: map-get($map, disabled-box-shadow);
	$disabled-color: map-get($map, disabled-color);
	$disabled-cursor: map-get($map, disabled-cursor);
	$disabled-opacity: map-get($map, disabled-opacity);
	$disabled-placeholder-color: map-get($map, disabled-placeholder-color);

	@if ($enabled) {
		align-items: $align-items;
		background-color: $bg;
		background-clip: $bg-clip;
		background-image: $bg-image;
		background-position: $bg-position;
		background-repeat: $bg-repeat;
		background-size: $bg-size;
		border-color: $border-color;
		border-radius: $border-radius;
		border-style: $border-style;
		border-width: $border-width;
		box-shadow: $box-shadow;
		color: $color;
		cursor: $cursor;
		display: $display;
		flex-wrap: $flex-wrap;
		font-size: $font-size;
		font-weight: $font-weight;
		height: $height;
		justify-content: $justify-content;
		line-height: $line-height;
		max-width: $max-width;
		min-height: $min-height;
		min-width: $min-width;
		outline: $outline;
		padding-bottom: $padding-bottom;
		padding-left: $padding-left;
		padding-right: $padding-right;
		padding-top: $padding-top;
		text-align: $text-align;
		text-transform: $text-transform;
		transition: $transition;
		width: $width;

		&::placeholder {
			color: $placeholder-color;
			opacity: $placeholder-opacity;
		}

		&::-moz-selection {
			background-color: $selection-bg;
			color: $selection-color;
		}

		&::selection {
			background-color: $selection-bg;
			color: $selection-color;
		}

		&:hover {
			background-color: $hover-bg;
			border-color: $hover-border-color;
			box-shadow: $hover-box-shadow;
			color: $hover-color;

			&::placeholder {
				color: $hover-placeholder-color;
			}
		}

		&:focus,
		&.focus {
			background-color: $focus-bg;
			background-image: $focus-bg-image;
			border-color: $focus-border-color;
			box-shadow: $focus-box-shadow;
			color: $focus-color;

			&::placeholder {
				color: $focus-placeholder-color;
			}
		}

		&[readonly] {
			background-color: $readonly-bg;
			background-image: $readonly-bg-image;
			border-color: $readonly-border-color;
			box-shadow: $readonly-box-shadow;
			color: $readonly-color;
			cursor: $readonly-cursor;
			opacity: $readonly-opacity;

			&::placeholder {
				color: $readonly-placeholder-color;
			}
		}

		&:disabled,
		&.disabled {
			background-color: $disabled-bg;
			background-image: $disabled-bg-image;
			border-color: $disabled-border-color;
			box-shadow: $disabled-box-shadow;
			color: $disabled-color;
			cursor: $disabled-cursor;
			opacity: $disabled-opacity;

			&::placeholder {
				color: $disabled-placeholder-color;
			}
		}
	}
}

/// A mixin to create Select Form Control variants. You can base your variant off Bootstrap's `select.form-control` selector or create your own base class (e.g., `<select class="form-control my-custom-form-control"></select>` or `<select class="my-custom-form-control"></select>`).
/// @param {Map} $map - A map of `key: value` pairs. The keys and value types are listed below:
/// @example
/// appearance: {String | Null},
/// bg: {Color | String | Null},
/// bg-clip: {String | Null},
/// bg-image: {String | List | Null},
/// bg-position: {String | List | Null},
/// bg-repeat: {String | List | Null},
/// bg-size: {Number | String | List | Null},
/// border-color: {Color | String | List | Null},
/// border-radius: {Number | String | List | Null},
/// border-style: {String | List | Null},
/// border-width: {Number | String | List | Null},
/// box-shadow: {String | List | Null},
/// color: {Color | String | Null},
/// cursor: {String | Null},
/// display: {String | Null},
/// font-size: {Number | String | Null},
/// font-weight: {Number | String | Null},
/// height: {Number | String | Null},
/// line-height: {Number | String | Null},
/// min-width: {Number | String | Null},
/// outline: {Number | String | Null},
/// padding-bottom: {Number | String | Null},
/// padding-left: {Number | String | Null},
/// padding-right: {Number | String | Null},
/// padding-top: {Number | String | Null},
/// transition: {String | List | Null},
/// width: {Number | String | Null},
/// hover-bg: {Color | String | Null},
/// hover-border-color: {Color | String | List | Null},
/// hover-box-shadow: {String | List | Null},
/// hover-color: {Color | String | Null},
/// focus-bg: {Color | String | Null},
/// focus-bg-image: {String | List | Null},
/// focus-border-color: {Color | String | List | Null},
/// focus-box-shadow: {String | List | Null},
/// focus-color: {Color | String | Null},
/// disabled-bg: {Color | String | Null},
/// disabled-bg-image: {String | List | Null},
/// disabled-border-color: {Color | String | List | Null},
/// disabled-box-shadow: {String | List | Null},
/// disabled-color: {Color | String | Null},
/// disabled-cursor: {String | Null},
/// disabled-opacity: {Number | String | Null},
/// @todo
/// - Add @example
/// - Add @link to documentation

@mixin clay-select-variant($map) {
	$appearance: map-get($map, appearance);
	$bg: map-get($map, bg);
	$bg-clip: map-get($map, bg-clip);
	$bg-image: map-get($map, bg-image);
	$bg-position: map-get($map, bg-position);
	$bg-repeat: map-get($map, bg-repeat);
	$bg-size: map-get($map, bg-size);
	$border-color: map-get($map, border-color);
	$border-radius: map-get($map, border-radius);
	$border-style: map-get($map, border-style);
	$border-width: map-get($map, border-width);
	$box-shadow: map-get($map, box-shadow);
	$color: map-get($map, color);
	$cursor: map-get($map, cursor);
	$display: map-get($map, display);
	$font-size: map-get($map, font-size);
	$font-weight: map-get($map, font-weight);
	$height: map-get($map, height);
	$line-height: map-get($map, line-height);
	$min-width: map-get($map, min-width);
	$outline: map-get($map, outline);
	$padding-bottom: map-get($map, padding-bottom);
	$padding-left: map-get($map, padding-left);
	$padding-right: map-get($map, padding-right);
	$padding-top: map-get($map, padding-top);
	$transition: map-get($map, transition);
	$width: map-get($map, width);

	$hover-bg: map-get($map, hover-bg);
	$hover-border-color: map-get($map, hover-border-color);
	$hover-box-shadow: map-get($map, hover-box-shadow);
	$hover-color: map-get($map, hover-color);

	$focus-bg: map-get($map, focus-bg);
	$focus-bg-image: map-get($map, focus-bg-image);
	$focus-border-color: map-get($map, focus-border-color);
	$focus-box-shadow: map-get($map, focus-box-shadow);
	$focus-color: map-get($map, focus-color);

	$disabled-bg: map-get($map, disabled-bg);
	$disabled-bg-image: map-get($map, disabled-bg-image);
	$disabled-border-color: map-get($map, disabled-border-color);
	$disabled-box-shadow: map-get($map, disabled-box-shadow);
	$disabled-color: map-get($map, disabled-color);
	$disabled-cursor: map-get($map, disabled-cursor);
	$disabled-opacity: map-get($map, disabled-opacity);

	background-clip: $bg-clip;
	border-color: $border-color;
	border-radius: $border-radius;
	border-style: $border-style;
	border-width: $border-width;
	box-shadow: $box-shadow;
	color: $color;
	cursor: $cursor;
	display: $display;
	font-size: $font-size;
	font-weight: $font-weight;
	line-height: $line-height;
	min-width: $min-width;
	outline: $outline;
	transition: $transition;
	width: $width;

	&:not([multiple]):not([size]) {
		-moz-appearance: $appearance;
		-webkit-appearance: $appearance;

		@if ($appearance) {
			&::-ms-expand {
				display: none;
			}
		}

		background-color: $bg;
		background-image: $bg-image;
		background-position: $bg-position;
		background-repeat: $bg-repeat;
		background-size: $bg-size;
		height: $height;
		padding-bottom: $padding-bottom;
		padding-left: $padding-left;
		padding-right: $padding-right;
		padding-top: $padding-top;

		&:hover {
			background-color: $hover-bg;
		}

		&:focus {
			background-color: $focus-bg;
			background-image: $focus-bg-image;
		}

		&:disabled {
			background-color: $disabled-bg;
			background-image: $disabled-bg-image;
		}
	}

	&:hover {
		border-color: $hover-border-color;
		box-shadow: $hover-box-shadow;
		color: $hover-color;
	}

	&:focus {
		border-color: $focus-border-color;
		box-shadow: $focus-box-shadow;
		color: $focus-color;

		&::-ms-value {
			// Suppress the nested default white text on blue background highlight given to
			// the selected option text when the (still closed) <select> receives focus
			// in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
			// match the appearance of the native widget.
			// See https://github.com/twbs/bootstrap/issues/19398.

			background-color: $bg;
			color: $color;
		}
	}

	&:disabled {
		border-color: $disabled-border-color;
		box-shadow: $disabled-box-shadow;
		color: $disabled-color;
		cursor: $disabled-cursor;
		opacity: $disabled-opacity;

		> option {
			@media (-webkit-min-device-pixel-ratio: 0) { // Webkit only
				color: $disabled-color;
			}
		}
	}

	option {
		cursor: $input-select-cursor;
	}
}

/// A mixin to create Clay Range variants.
/// @param {Map} $map - A map of `key: value` pairs. The keys and value types are listed below:
/// @example
/// color: {Color | String | Null},
/// display: {String | Null},
/// padding-bottom: {Number | String | Null},
/// position: {String | Null},
/// vertical-align: {String | Null},
/// width: {Number | String | List | Null},
/// thumb-appearance: {String | Null},
/// thumb-bg: {Color | String | Null},
/// thumb-bg-image: {String | List | Null},
/// thumb-border-radius: {Number | String | List | Null},
/// thumb-border-color: {Color | String | List | Null},
/// thumb-border-style: {String | List | Null},
/// thumb-border-width: {Number | String | List | Null},
/// thumb-box-shadow: {String | List | Null},
/// thumb-height: {Number | String | Null},
/// thumb-width: {Number | String | Null},
/// track-appearance: {String | Null},
/// track-bg: {Color | String | Null},
/// track-bg-image: {String | List | Null},
/// track-border-color: {Color | String | List | Null},
/// track-border-radius: {Number | String | List | Null},
/// track-border-style: {String | List | Null},
/// track-border-width: {Number | String | List | Null},
/// track-height: {Number | String | Null},
/// track-position: {String | Null},
/// track-top: {Number | String | Null},
/// track-width: {Number | String | Null},
/// progress-bg: {Color | String | Null},
/// progress-bg-image: {String | List | Null},
/// progress-border-color: {Color | String | Null},
/// progress-border-radius: {Number | String | List | Null},
/// progress-border-style: {String | List | Null},
/// progress-border-width: {Number | String | Null},
/// progress-height: {Number | String | Null},
/// progress-margin-top: {Number | String | Null},
/// progress-position: {String | Null},
/// progress-top: {Number | String | Null},
/// progress-width: {Number | String | Null},
/// form-control-appearance: {String | Null},
/// form-control-bg: {Color | String | Null},
/// form-control-color: {Color | String | Null},
/// form-control-height: {Number | String | Null},
/// form-control-position: {String | Null},
/// form-control-z-index: {Number | String | Null},
/// form-control-data-label-margin-bottom: {Number | String | Null},
/// data-label-align-items: {String | Null},
/// data-label-display: {String | Null},
/// data-label-font-size: {Number | String | Null},
/// data-label-font-weight: {Number | String | Null},
/// data-label-height: {Number | String | Null},
/// data-label-justify-content: {String | Null},
/// data-label-line-height: {Number | String | Null},
/// data-label-position: {String | Null},
/// data-label-top: {Number | String | Null},
/// data-label-width: {Number | String | Null},
/// data-label-before-content: {Number | String | Null},
/// data-label-before-left: {Number | String | Null},
/// data-label-after-content: {Number | String | Null},
/// data-label-after-right: {Number | String | Null},
/// hover-cursor: {String | Null},
/// hover-thumb-bg: {Color | String | Null},
/// focus-outline: {Number | String | List | Null},
/// focus-thumb-box-shadow: {String | List | Null},
/// disabled-color: {Color | String | Null},
/// disabled-cursor: {String | Null},
/// disabled-thumb-bg: {Color | String | Null},
/// disabled-thumb-box-shadow: {String | List | Null},
/// disabled-progress-bg: {Color | String | Null},
/// disabled-track-bg: {Color | String | Null},

@mixin clay-range-input-variant($map) {
	$color: map-get($map, color);
	$display: map-get($map, display);
	$padding-bottom: map-get($map, padding-bottom);
	$position: map-get($map, position);
	$vertical-align: map-get($map, vertical-align);
	$width: map-get($map, width);

	$thumb-appearance: map-get($map, thumb-appearance);
	$thumb-bg: map-get($map, thumb-bg);
	$thumb-bg-image: map-get($map, thumb-bg-image);
	$thumb-border-radius: map-get($map, thumb-border-radius);
	$thumb-border-color: map-get($map, thumb-border-color);
	$thumb-border-style: map-get($map, thumb-border-style);
	$thumb-border-width: map-get($map, thumb-border-width);
	$thumb-box-shadow: map-get($map, thumb-box-shadow);
	$thumb-height: map-get($map, thumb-height);
	$thumb-width: map-get($map, thumb-width);

	$track-appearance: map-get($map, track-appearance);
	$track-bg: map-get($map, track-bg);
	$track-bg-image: map-get($map, track-bg-image);
	$track-border-color: map-get($map, track-border-color);
	$track-border-radius: map-get($map, track-border-radius);
	$track-border-style: map-get($map, track-border-style);
	$track-border-width: map-get($map, track-border-width);
	$track-height: map-get($map, track-height);
	$track-position: map-get($map, track-position);
	$track-top: map-get($map, track-top);

	@if ($thumb-height and $track-height) {
		$track-top: calc((#{$thumb-height} - #{$track-height}) / 2);
	}

	$track-width: map-get($map, track-width);

	$progress-bg: map-get($map, progress-bg);
	$progress-bg-image: map-get($map, progress-bg-image);
	$progress-border-color: map-get($map, progress-border-color);
	$progress-border-radius: map-get($map, progress-border-radius);
	$progress-border-style: map-get($map, progress-border-style);
	$progress-border-width: map-get($map, progress-border-width);
	$progress-height: setter(map-get($map, progress-height), $track-height);
	$progress-margin-top: map-get($map, progress-margin-top);
	$progress-position: map-get($map, progress-position);
	$progress-top: map-get($map, progress-top);

	@if ($thumb-height and $track-height) {
		$progress-top: calc((#{$thumb-height} - #{$track-height}) / 2);
	}

	$progress-width: map-get($map, progress-width);

	$form-control-appearance: map-get($map, form-control-appearance);
	$form-control-bg: map-get($map, form-control-bg);
	$form-control-color: map-get($map, form-control-color);
	$form-control-height: setter(map-get($map, form-control-height), clay-max($track-height, $thumb-height));
	$form-control-position: map-get($map, form-control-position);
	$form-control-z-index: map-get($map, form-control-z-index);
	$form-control-data-label-margin-bottom: setter(map-get($map, form-control-data-label-margin-bottom), $form-control-height);

	$data-label-align-items: map-get($map, data-label-align-items);
	$data-label-display: map-get($map, data-label-display);
	$data-label-font-size: map-get($map, data-label-font-size);
	$data-label-font-weight: map-get($map, data-label-font-weight);
	$data-label-height: map-get($map, data-label-height);
	$data-label-justify-content: map-get($map, data-label-justify-content);
	$data-label-line-height: map-get($map, data-label-line-height);
	$data-label-position: map-get($map, data-label-position);
	$data-label-top: setter(map-get($map, data-label-top), $form-control-height);
	$data-label-width: map-get($map, data-label-width);

	$data-label-before-content: map-get($map, data-label-before-content);
	$data-label-before-left: map-get($map, data-label-before-left);

	$data-label-after-content: map-get($map, data-label-after-content);
	$data-label-after-right: map-get($map, data-label-after-right);

	$hover-cursor: map-get($map, hover-cursor);
	$hover-thumb-bg: map-get($map, hover-thumb-bg);

	$focus-outline: map-get($map, focus-outline);
	$focus-thumb-box-shadow: map-get($map, focus-thumb-box-shadow);

	$disabled-color: map-get($map, disabled-color);
	$disabled-cursor: map-get($map, disabled-cursor);
	$disabled-thumb-bg: map-get($map, disabled-thumb-bg);
	$disabled-thumb-box-shadow: map-get($map, disabled-thumb-box-shadow);
	$disabled-progress-bg: map-get($map, disabled-progress-bg);
	$disabled-track-bg: map-get($map, disabled-track-bg);

	color: $color;
	display: $display;
	padding-bottom: $padding-bottom;
	position: $position;
	vertical-align: $vertical-align;
	width: $width;

	.clay-range-track {
		background-color: $track-bg;
		border-color: $track-border-color;
		border-radius: $track-border-radius;
		border-style: $track-border-style;
		border-width: $track-border-width;
		height: $track-height;
		position: $track-position;
		top: $track-top;
		width: $track-width;
	}

	.clay-range-progress {
		background-color: $progress-bg;
		background-image: $progress-bg-image;
		border-color: $progress-border-color;
		border-radius: $progress-border-radius;
		border-style: $progress-border-style;
		border-width: $progress-border-width;
		height: $progress-height;
		margin-top: $progress-margin-top;
		position: $progress-position;
		top: $progress-top;
		width: $progress-width;
	}

	.form-control-range {
		content: '#{$thumb-width}';
		-moz-appearance: $form-control-appearance;
		-webkit-appearance: $form-control-appearance;
		appearance: $form-control-appearance;
		background-color: $form-control-bg;
		color: $form-control-color;
		height: $form-control-height;
		position: $form-control-position;
		z-index: $form-control-z-index;

		&::-moz-range-thumb {
			-moz-appearance: $thumb-appearance;
			appearance: $thumb-appearance;
			background-color: $thumb-bg;
			background-image: $thumb-bg-image;
			border-color: $thumb-border-color;
			border-radius: $thumb-border-radius;
			border-style: $thumb-border-style;
			border-width: $thumb-border-width;
			box-shadow: $thumb-box-shadow;
			height: $thumb-height;
			width: $thumb-width;
		}

		&::-ms-thumb {
			appearance: $thumb-appearance;
			background-color: $thumb-bg;
			background-image: $thumb-bg-image;
			border-color: $thumb-border-color;
			border-radius: $thumb-border-radius;
			border-style: $thumb-border-style;
			border-width: $thumb-border-width;
			box-shadow: $thumb-box-shadow;
			height: $thumb-height;
			width: $thumb-width;
		}

		&::-webkit-slider-thumb {
			-webkit-appearance: $thumb-appearance;
			appearance: $thumb-appearance;
			background-color: $thumb-bg;
			background-image: $thumb-bg-image;
			border-color: $thumb-border-color;
			border-radius: $thumb-border-radius;
			border-style: $thumb-border-style;
			border-width: $thumb-border-width;
			box-shadow: $thumb-box-shadow;
			height: $thumb-height;
			width: $thumb-width;
		}

		&::-moz-focus-outer {
			@if ($focus-outline == 0) {
				border-width: 0;
			}
		}

		&::-moz-range-track {
			-moz-appearance: $track-appearance;
			appearance: $track-appearance;
		}

		&::-webkit-slider-runnable-track {
			-webkit-appearance: $track-appearance;
			appearance: $track-appearance;
		}

		&:hover {
			cursor: $hover-cursor;

			&::-moz-range-thumb {
				background-color: $hover-thumb-bg;
			}

			&::-ms-thumb {
				background-color: $hover-thumb-bg;
			}

			&::-webkit-slider-thumb {
				background-color: $hover-thumb-bg;
			}
		}

		&:focus {
			outline: $focus-outline;

			&::-moz-range-thumb {
				box-shadow: $focus-thumb-box-shadow;
			}

			&::-ms-thumb {
				box-shadow: $focus-thumb-box-shadow;
			}

			&::-webkit-slider-thumb {
				box-shadow: $focus-thumb-box-shadow;
			}
		}

		&:disabled {
			color: $disabled-color;
			cursor: $disabled-cursor;

			&::-moz-range-thumb {
				background-color: $disabled-thumb-bg;
				box-shadow: $disabled-thumb-box-shadow;
			}

			&::-ms-thumb {
				background-color: $disabled-thumb-bg;
				box-shadow: $disabled-thumb-box-shadow;
			}

			&::-webkit-slider-thumb {
				background-color: $disabled-thumb-bg;
				box-shadow: $disabled-thumb-box-shadow;
			}

			~ .clay-range-track {
				background-color: $disabled-track-bg;
			}

			~ .clay-range-progress {
				background-color: $disabled-progress-bg;
			}
		}

		&[data-label-min],
		&[data-label-max] {
			margin-bottom: $form-control-data-label-margin-bottom;
		}

		&[data-label-min]::before {
			content: $data-label-before-content;
			left: $data-label-before-left;
		}

		&[data-label-max]::after {
			content: $data-label-after-content;
			right: $data-label-after-right;
		}

		&::after,
		&::before {
			align-items: $data-label-align-items;
			display: $data-label-display;
			font-size: $data-label-font-size;
			font-weight: $data-label-font-weight;
			height: $data-label-height;
			justify-content: $data-label-justify-content;
			line-height: $data-label-line-height;
			position: $data-label-position;
			top: $data-label-top;
			width: $data-label-width;
		}
	}
}